<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ustb.dao.EmpMapper">
  <resultMap id="BaseResultMap" type="cn.ustb.vo.Emp">
    <id column="empno" jdbcType="INTEGER" property="empno" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="dno" jdbcType="INTEGER" property="dno" />
  </resultMap>
   <resultMap id="WithDeptResultMap" type="cn.ustb.vo.Emp">
    <id column="empno" jdbcType="INTEGER" property="empno" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="dno" jdbcType="INTEGER" property="dno" />
    <association property="dept" javaType="cn.ustb.vo.Dept">
    	<id column="deptno" property="deptno" />
    	<result column="dname" property="dname"/>
    </association>
  </resultMap> 
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    empno, ename, sex, email, dno
  </sql>
  <select id="selectByExample" parameterType="cn.ustb.vo.EmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
   <sql id="WithDept_Column_List">
  	e.empno,e.ename,e.sex,e.email,e.dno,d.deptno,d.dname
  </sql>
  <select id="selectByExampleWithDept" resultMap="WithDeptResultMap">
  	select
  		<if test="distinct">
  			distinct
  		</if>
  		<include refid="WithDept_Column_List"/>
  			from emp e left join dept d on e.dno=d.deptno
  		<if test="_parameter!=null">
  			<include refid="Example_Where_Clause"/>
  		</if>
  		<if test="orderByClause!=null">
  			order by ${orderByClause}
  		</if>
  </select>
  <select id="selectByPrimaryKeyWithDept" parameterType="java.lang.Integer" resultMap="WithDeptResultMap">
    select 
    <include refid="WithDept_Column_List" />
  	from emp e left join dept d on e.dno=d.deptno
    where empno = #{empno,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emp
    where empno = #{empno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where empno = #{empno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ustb.vo.EmpExample">
    delete from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ustb.vo.Emp">
    insert into emp (empno, ename, sex, 
      email, dno)
    values (#{empno,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{dno,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.ustb.vo.Emp">
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empno != null">
        empno,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="dno != null">
        dno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empno != null">
        #{empno,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="dno != null">
        #{dno,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ustb.vo.EmpExample" resultType="java.lang.Long">
    select count(*) from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emp
    <set>
      <if test="record.empno != null">
        empno = #{record.empno,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.dno != null">
        dno = #{record.dno,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emp
    set empno = #{record.empno,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      dno = #{record.dno,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ustb.vo.Emp">
    update emp
    <set>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="dno != null">
        dno = #{dno,jdbcType=INTEGER},
      </if>
    </set>
    where empno = #{empno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ustb.vo.Emp">
    update emp
    set ename = #{ename,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      dno = #{dno,jdbcType=INTEGER}
    where empno = #{empno,jdbcType=INTEGER}
  </update>
</mapper>